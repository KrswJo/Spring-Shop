/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.2'
    implementation 'com.querydsl:querydsl-jpa:4.3.1'
    implementation 'com.querydsl:querydsl-apt:4.3.1'

    implementation 'org.springframework.boot:spring-boot-devtools:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.2'

    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.5.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.5.2'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:3.0.4.RELEASE'
    implementation 'org.modelmapper:modelmapper:2.3.9'
    implementation 'org.junit.platform:junit-platform-engine:1.6.0'

    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'mysql:mysql-connector-java:8.0.25'
    testImplementation 'org.springframework.security:spring-security-test:5.5.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.0'
}

group = 'com.shop'
version = '0.0.1-SNAPSHOT'
description = 'shop'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

def querydslDir = "src/main/generated"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}